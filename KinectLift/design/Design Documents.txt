Design Documents

KinectLift aims to fix form errors in heavy weight lifting excersises like the squat and the bench. In order to do so, it uses the data it collects from the kinect and calculates the differences in various positions of the joints. The x,y positions of each joint is crucial in this process.

For instance, for the squat, it detects three mistakes in the form. First, if the knee comes too forward that it crosses the toes. In order to detect this, we look at the initial position of the feet and the maximum x position of the knee. If the maximum x position of the knee is greater, the user needs to correct his form. Secondly, KinectLift detects partial reps. In this case, if the hips of the user doesn't go below the knees, the user needs to correct his/her form. Finally, the program detects if the bar is in line with the feet. It looks at the x coordinate of the wrists, where the bar is held, and the x coordinate of the feet. If the difference between these coordinates are too big, the user's form in incorrect. 


Simlarly, for the bench, KinectLift detects four mistakes. Firstly, linear bar path is detected when the difference between minimum x coordinate of the wrist and maximum is too little. Secondly, partial rep is detected when the y coord of wrists don't come close enough to the y coord of spine. Thirdly, KinectLift tells the user to tuck in shoulders by looking at the difference in the elbow and spine x coordinates. Finally, unstable feet is detected when the user's feet's y coordinates min and max differ by a significant amount.

In terms of UI, there is a very solid basic UI to naviagate through excersizes and various features like orientation and help. However, there are 4 main components. Firstly, Ã¥the orientation was very important because according to which profile the kinect faces, the results can change dramatically. Therefore, I implemented a left and right button that the user could change according to the location of the kinect. The "help" button is a critical component that allows users to understand how to use the application. It has clear, carefully structured guidelines that users can follow. Another important feature is the save and load feature. After the user sees his/her summary of the excersise. They can opt to save it so that they can see what they need to work on. This is something that I based off a design I saw off the web and found it necessary. In additino, the application notifies the user when the joints are detected. Often, in the apps out in the markets, the app might not detect the movement so the user ends up wasting his/her time. This will prevent that. Finally, my application provides clear comments on how the user should improve his or her form. Many apps do not tell you what it is that you're doing wrong.
